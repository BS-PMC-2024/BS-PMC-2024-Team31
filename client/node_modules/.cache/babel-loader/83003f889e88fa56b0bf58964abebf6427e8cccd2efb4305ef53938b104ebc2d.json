{"ast":null,"code":"import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport logo from '../../assests/images/logo.png'; // Update the path to your logo image\n/*const Navbar = ({ handleLogout }) => {\n  const [showLogoutConfirm, setShowLogoutConfirm] = useState(false);\n  const isLoggedIn = localStorage.getItem(\"token\") ? true : false;\n\n  const confirmLogout = () => {\n    setShowLogoutConfirm(true);\n  };\n\n  const cancelLogout = () => {\n    setShowLogoutConfirm(false);\n  };\n\n  const performLogout = () => {\n    localStorage.clear();\n    window.location = '/login';\n  };\n\n  return (\n    <>\n      <nav>\n        <NavLink exact to=\"/\" activeClassName=\"active-link\">\n          <img src={logo} alt=\"Logo\" width=\"150\" height=\"90\" />\n        </NavLink>\n        \n        <div>\n          <ul id=\"navbar\">\n            <li>\n              <h1 exact to=\"/\" activeClassName=\"active-link\">Welcome</h1>\n            </li>\n            {isLoggedIn ? (\n              <li>\n                <button\n                  className=\"white_btn\"\n                  onClick={confirmLogout}\n                  data-testid=\"Logout-button\"\n                >\n                  Logout\n                </button>\n              </li>\n            ) : (\n              <li>\n                <NavLink to=\"/login\" className=\"white_btn\" data-testid=\"Login-button\">\n                  Login\n                </NavLink>\n              </li>\n            )}\n          </ul>\n        </div>\n      </nav>\n\n      {showLogoutConfirm && (\n        <div className=\"logout-confirm\">\n          <p>Are you sure you want to logout?</p>\n          <button onClick={performLogout}>Yes</button>\n          <button onClick={cancelLogout}>No</button>\n        </div>\n      )}\n    </>\n  );\n};*/\n\nexport default Navbar;","map":{"version":3,"names":["React","useState","NavLink","logo","Navbar"],"sources":["C:/Users/אסראא אלגרגאוי/OneDrive/Desktop/TIT/client/src/components/Navbar/Navbar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport logo from '../../assests/images/logo.png'; // Update the path to your logo image\n/*const Navbar = ({ handleLogout }) => {\n  const [showLogoutConfirm, setShowLogoutConfirm] = useState(false);\n  const isLoggedIn = localStorage.getItem(\"token\") ? true : false;\n\n  const confirmLogout = () => {\n    setShowLogoutConfirm(true);\n  };\n\n  const cancelLogout = () => {\n    setShowLogoutConfirm(false);\n  };\n\n  const performLogout = () => {\n    localStorage.clear();\n    window.location = '/login';\n  };\n\n  return (\n    <>\n      <nav>\n        <NavLink exact to=\"/\" activeClassName=\"active-link\">\n          <img src={logo} alt=\"Logo\" width=\"150\" height=\"90\" />\n        </NavLink>\n        \n        <div>\n          <ul id=\"navbar\">\n            <li>\n              <h1 exact to=\"/\" activeClassName=\"active-link\">Welcome</h1>\n            </li>\n            {isLoggedIn ? (\n              <li>\n                <button\n                  className=\"white_btn\"\n                  onClick={confirmLogout}\n                  data-testid=\"Logout-button\"\n                >\n                  Logout\n                </button>\n              </li>\n            ) : (\n              <li>\n                <NavLink to=\"/login\" className=\"white_btn\" data-testid=\"Login-button\">\n                  Login\n                </NavLink>\n              </li>\n            )}\n          </ul>\n        </div>\n      </nav>\n\n      {showLogoutConfirm && (\n        <div className=\"logout-confirm\">\n          <p>Are you sure you want to logout?</p>\n          <button onClick={performLogout}>Yes</button>\n          <button onClick={cancelLogout}>No</button>\n        </div>\n      )}\n    </>\n  );\n};*/\n\nexport default Navbar;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAO,cAAc;AACrB,OAAOC,IAAI,MAAM,+BAA+B,CAAC,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}